<configuration>
  <system.webServer>

    <!-- indicates that the hello.js file is a node.js application 
    to be handled by the iisnode module -->

    <handlers>
      <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
    </handlers>

    <!-- use URL rewriting to redirect the entire branch of the URL namespace
    to hello.js node.js application; for example, the following URLs will 
    all be handled by hello.js:
    
        http://localhost/node/express/myapp/foo
        http://localhost/node/express/myapp/bar
        
    -->

    <rewrite>
      <rules>
		<rule name="HTTP to Prod HTTPS redirect" stopProcessing="true">
		  <match url="(.*)" />
		  <conditions>
			<add input="{HTTPS}" pattern="off" ignoreCase="true" />
		  </conditions>
		  <action type="Redirect" redirectType="Found" url="https://{HTTP_HOST}/{R:1}" />
		</rule>
		<!-- Don't interfere with requests for logs -->
		<rule name="LogFile" patternSyntax="ECMAScript" stopProcessing="true">
		  <match url="^[a-zA-Z0-9_\-]+\.js\.logs\/\d+\.txt$" />
		</rule>
		<!-- Don't interfere with requests for node-inspector debugging -->
		<rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
		  <match url="^server.js\/debug[\/]?" />
		</rule>
		<!-- First we consider whether the incoming URL matches a physical file in the     /public folder -->
		<rule name="StaticContent">
		  <action type="Rewrite" url="public{REQUEST_URI}" />
		</rule>
		<!-- All other URLs are mapped to the Node.js application entry point -->
		<rule name="DynamicContent">
		  <conditions>
			 <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True" />
		  </conditions>
		  <action type="Rewrite" url="server.js" />
		</rule>
		<!-- rule to redirect /* to server.js -->
        <!-- <rule name="myapp">
          <match url="/*" />
          <action type="Rewrite" url="server.js" />
        </rule> -->
      </rules>
    </rewrite>
    
  </system.webServer>
</configuration>
